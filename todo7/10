
• TODO

  - Fix HTML structure and assets
      - Update index.html:72-96 to place the React mount node inside <body> and remove the direct <link rel="stylesheet" href="./src/index.css" />; rely on Vite’s bundled CSS import instead.
      - Swap remote Google Fonts for the local files in public/fonts/ and drop duplicate preload/preconnect tags in index.html.
  - Smooth scrolling safeguards
      - In src/App.jsx:37-45, store the GSAP ticker callback in a variable so you remove the exact reference during cleanup.
      - Gate Lenis/ScrollTrigger setup behind a matchMedia('(prefers-reduced-motion: reduce)') check (or similar logic) to disable heavy motion for users who opt out.
  - Accessibility touch‑ups
      - Replace the placeholder alt text in src/components/home/Hero/Hero.jsx:9 with a meaningful description of the logo/hero visual.
  - Content/data separation
      - Move hard-coded data from Services, UpcomingEvents, Hero, Creation, etc. into new modules under src/data/ and import it into the components.
      - Rework src/components/home/OldAboutUs/ into a polished shared “Venue intro” section (or archive the folder under src/deprecated/) so only the finalized content remains live.
  - Component organization
      - Restructure src/components/ into feature-based directories such as src/features/gallery, src/features/events, src/features/contact, collocating styles/tests/docs with their feature.
      - Update import paths after the move and ensure Vite aliases (if any) still resolve.
  - Documentation refresh
      - Create docs/architecture.md outlining project structure, build scripts (e.g., npm run build:gallery), deployment flow, and data-generation rules (gallery filenames, etc.).
      - Rewrite README.md to replace the Vite boilerplate with project-specific setup, scripts, Node version, and deployment instructions.
  - SEO housekeeping
      - Align public/robots.txt and public/sitemap.xml with current routes (/, /event, /konst, /galleri, /om-oss) and ensure future updates stay in sync.
  - Gallery modernization
      - Replace react-image-gallery usage in src/components/gallery/ImageGallery/ImageGallery.jsx with the custom lightweight solution described in docs/gallery-modernization/.
      - Remove the dependency from package.json once the custom lightbox is in place.
  - Fade-in improvements
      - Refactor src/components/ui/FadeInSection.jsx to use an IntersectionObserver for triggering visibility instead of the fixed timeout, and clean up observers on unmount.
  - Asset optimization
      - Write an npm run optimize-images script (Sharp/Squoosh/Imagemin) that compresses everything under public/images/; document recommended usage in the README.
  - Automation tweaks
      - Ensure scripts/generate-gallery-categories.js is wired into npm run build/CI so gallery JSON stays current (or add a pre-commit/prebuild hook).
